package util;

import java.util.List;
import java.util.Map;

import obj.Adjacent;
import obj.Coord;
import obj.Path;

public class Printer {
	
	
	/**
	 * @param cityCoordMap
	 * print cities coordinates map
	 */
	public static void printCityCoordMap(Map<Integer, Coord<?, ?>> cityCoordMap ) {
		System.out.println("Printing CityCoordMap");
		int city;
	    Coord<?, ?> coord;
		for(Map.Entry<Integer, Coord<?, ?>> entry : cityCoordMap.entrySet()) {
			city = entry.getKey();
		    coord =  entry.getValue();
		    System.out.println(city+" : "+coord.toString());
		}
		System.out.println("Total nodes : "+cityCoordMap.size());
		System.out.println("");
	} // public void printCityCoordMap(Map<Integer, Coord<?, ?>> cityCoordMap ) 
	
	/**
	 * @param weightedAdjMap
	 * print weighted adjacent map
	 */
	public static void printWeightedAdjMap(Map<Integer, List<Adjacent<?, ?>>> weightedAdjMap) {
		System.out.println("Printing Adjency map");
		int edgesCounter=0;
		int city;
		List<Adjacent<?, ?>> adjList;
		for(Map.Entry<Integer, List<Adjacent<?, ?>>> entry : weightedAdjMap.entrySet()) {
			city = entry.getKey();
		    adjList =  entry.getValue();
		    System.out.print(city+" : ");
		    for(Adjacent<?, ?> adj : adjList) {
		    	System.out.print(adj.toString()+" - ");
		    	edgesCounter++;
		    }
		    System.out.println("");
		}
		edgesCounter/=2;
		System.out.println("Total edges : "+edgesCounter);
		System.out.println("");
	} // public void printWeightedAdjMap(Map<Integer, List<Adjacent<?, ?>>> weightedAdjMap)

	/**
	 * @param heuristicMap
	 * @param goal
	 * Print heuristic map
	 */
	public static void printHeuristicdMap(Map<Integer, Float> heuristicMap, int goal) {
		System.out.println("Printing HeuristicMap for "+goal);
		int city;
	    float weight;
		for(Map.Entry<Integer, Float> entry : heuristicMap.entrySet()) {
			city = entry.getKey();
			weight =  entry.getValue();
		    System.out.println(city+" : "+weight);
		}
		System.out.println("");
	} // public void printCityCoordMap(Map<Integer, Coord<?, ?>> cityCoordMap )
	
	
	public static void printPathData(Path path) {
		System.out.println("Printing data for path");
		
		List<Integer> nodeList = path.getPath();
		System.out.print("Nodes : ");
		System.out.print(nodeList);
		System.out.println();

		float cost = path.getCost();
		System.out.println("Cost : "+cost);
		
		float h = path.getPathHeuristic();
		System.out.println("Heuristic : "+h);		
	}
	
	
	public static void printMap(Map<?, ?> map) {
		System.out.println("Printing map");
		Object a;
		Object b;
		for(Map.Entry<?, ?> entry : map.entrySet()) {
			a = entry.getKey();
			b =  entry.getValue();
		    System.out.println(a+" : "+b);
		}
		System.out.println("");
	} // public void printCityCoordMap(Map<Integer, Coord<?, ?>> cityCoordMap )
	
}
